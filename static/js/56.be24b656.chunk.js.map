{"version":3,"file":"static/js/56.be24b656.chunk.js","mappings":"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","sources":["components/utils/PromoBookSlider.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { BooksContext } from '../../BooksContext';\r\nimport { Link } from 'react-router-dom';\r\nimport './SpecificBookSlider.css';\r\nimport LazyImage from './LazyImage';\r\nimport getPublicUrl from '../functional/getPublicUrl';\r\n\r\nconst PromoBookSlider = () => {\r\n  const { books, fieldState, setSpecificBook, promoBookSlider, theme } = useContext(BooksContext);\r\n  const [showLeftButton, setShowLeftButton] = useState(false);\r\n  const [showRightButton, setShowRightButton] = useState(false);\r\n  const [itemsPerPage, setItemsPerPage] = useState(7);\r\n  const scrollRef = useRef(null);\r\n\r\n  const weights = useMemo(() => ({\r\n    promo: 3,\r\n    Filter: 3,\r\n    Search: 3,\r\n  }), []);\r\n  \r\n  const updateItemsPerPage = useCallback(() => {\r\n    const width = window.innerWidth;\r\n    setItemsPerPage(width < 600 ? 7 : width < 1200 ? 12 : 20);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateItemsPerPage();\r\n    window.addEventListener('resize', updateItemsPerPage);\r\n    return () => window.removeEventListener('resize', updateItemsPerPage);\r\n  }, [updateItemsPerPage]);\r\n\r\n  const promoBooks = useMemo(() => \r\n    books.filter(book => book.Tip?.split(',').includes('promo') && book.Visibility !== '0'), \r\n  [books]);\r\n\r\n  const bookMap = useMemo(() => new Map(books.map(book => [book.id, book])), [books]);\r\n\r\n  const filterBooks = useMemo(() => \r\n    (promoBookSlider.Filter || []).map(id => bookMap.get(id)).filter(book => book && book.Visibility !== '0'),\r\n  [bookMap, promoBookSlider.Filter]);\r\n\r\n  const searchBooks = useMemo(() => \r\n    (promoBookSlider.Search || []).map(id => bookMap.get(id)).filter(book => book && book.Visibility !== '0'),\r\n  [bookMap, promoBookSlider.Search]);\r\n\r\n  const totalWeight = useMemo(() => Object.values(weights).reduce((sum, w) => sum + w, 0), [weights]);\r\n\r\n  const promoCount = useMemo(() => Math.round((weights.promo / totalWeight) * itemsPerPage), [weights, totalWeight, itemsPerPage]);\r\n  const filterCount = useMemo(() => Math.round((weights.Filter / totalWeight) * itemsPerPage), [weights, totalWeight, itemsPerPage]);\r\n  const searchCount = useMemo(() => Math.round((weights.Search / totalWeight) * itemsPerPage), [weights, totalWeight, itemsPerPage]);\r\n\r\n  const bookIdsToDisplay = useMemo(() => {\r\n    const promoBookIds = promoBooks.slice(0, promoCount).map(book => book.id);\r\n    const filterBookIds = filterBooks.slice(0, filterCount).map(book => book.id);\r\n    const searchBookIds = searchBooks.slice(0, searchCount).map(book => book.id);\r\n    \r\n    return Array.from(new Set([...promoBookIds, ...filterBookIds, ...searchBookIds])).slice(0, itemsPerPage);\r\n  }, [promoBooks, promoCount, filterBooks, filterCount, searchBooks, searchCount, itemsPerPage]);\r\n\r\n  const handleBookClick = (bookId) => {\r\n    if (bookId) setSpecificBook(prev => ({ ...prev, id: bookId }));\r\n  };\r\n\r\n  const getImageSource = (book) => {\r\n    const folder = 'img';\r\n    if (book.imagepublic) return getPublicUrl({ folder, filename: book.imagepublic });\r\n    if (book.image) return book.image;\r\n    const imagespublic = book.imageblockpublic?.split(',').map(element => getPublicUrl({ folder, filename: element })) ?? [];\r\n    return imagespublic[0] || '';\r\n  };\r\n\r\n  const updateScrollButtonsVisibility = useCallback(() => {\r\n    const scrollElement = scrollRef.current;\r\n    if (!scrollElement) return;\r\n    \r\n    setShowLeftButton(scrollElement.scrollLeft > 0);\r\n    setShowRightButton(scrollElement.scrollLeft < scrollElement.scrollWidth - scrollElement.clientWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const scrollElement = scrollRef.current;\r\n    updateScrollButtonsVisibility();\r\n    window.addEventListener('resize', updateScrollButtonsVisibility);\r\n    if (scrollElement) {\r\n      scrollElement.addEventListener('scroll', updateScrollButtonsVisibility);\r\n    }\r\n    return () => {\r\n      window.removeEventListener('resize', updateScrollButtonsVisibility);\r\n      if (scrollElement) {\r\n        scrollElement.removeEventListener('scroll', updateScrollButtonsVisibility);\r\n      }\r\n    };\r\n  }, [updateScrollButtonsVisibility, bookIdsToDisplay]);\r\n  \r\n  const handleScroll = (direction) => {\r\n    if (scrollRef.current) {\r\n      const scrollAmount = scrollRef.current.clientWidth;\r\n      scrollRef.current.scrollBy({ \r\n        left: direction === 'left' ? -scrollAmount : scrollAmount, \r\n        behavior: 'smooth' \r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={`slider-wrapper ${theme}`}>\r\n      <div className=\"slider-title\">Top Products</div>\r\n      {showLeftButton && (\r\n        <button className=\"scroll-button-specific left\" onClick={() => handleScroll('left')}>\r\n          {'<'}\r\n        </button>\r\n      )}\r\n      <div className=\"slider-container-specific\" ref={scrollRef}>\r\n        {bookIdsToDisplay.map(bookId => {\r\n          const book = bookMap.get(bookId);\r\n          if (!book) return null;\r\n          return (\r\n            <Link className=\"book-card-specific\" to=\"/specificbook\" key={book.id} onClick={() => handleBookClick(book.id)}>\r\n              <LazyImage src={getImageSource(book)} alt={book.title} className={'artmini-specific'} />\r\n              {book.price && <b className='book-size'>{book.price}{fieldState.payment ?? ''}</b>}\r\n              <div>{book.title?.length >= 12 ? book.title.slice(0, 9) + '...' : book.title}</div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      {showRightButton && (\r\n        <button className=\"scroll-button-specific right\" onClick={() => handleScroll('right')}>\r\n          {'>'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default PromoBookSlider;"],"names":["PromoBookSlider","books","fieldState","setSpecificBook","promoBookSlider","theme","useContext","BooksContext","showLeftButton","setShowLeftButton","useState","showRightButton","setShowRightButton","itemsPerPage","setItemsPerPage","scrollRef","useRef","weights","useMemo","promo","Filter","Search","updateItemsPerPage","useCallback","width","window","innerWidth","useEffect","addEventListener","removeEventListener","promoBooks","filter","book","_book$Tip","Tip","split","includes","Visibility","bookMap","Map","map","id","filterBooks","get","searchBooks","totalWeight","Object","values","reduce","sum","w","promoCount","Math","round","filterCount","searchCount","bookIdsToDisplay","promoBookIds","slice","filterBookIds","searchBookIds","Array","from","Set","getImageSource","_book$imageblockpubli","_book$imageblockpubli2","imagepublic","getPublicUrl","folder","filename","image","imageblockpublic","element","updateScrollButtonsVisibility","scrollElement","current","scrollLeft","scrollWidth","clientWidth","handleScroll","direction","scrollAmount","scrollBy","left","behavior","_jsxs","className","children","_jsx","onClick","ref","bookId","_fieldState$payment","_book$title","Link","to","prev","handleBookClick","LazyImage","src","alt","title","price","payment","length"],"sourceRoot":""}